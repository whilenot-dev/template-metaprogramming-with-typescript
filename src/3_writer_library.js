#!/usr/bin/env -S node --no-warnings

import path from "path";
import { fileURLToPath } from "url";

import CodeBlockWriter from "code-block-writer";

import data from "../data/input.json" assert { type: "json" };

main();

function main() {
  const writer = new CodeBlockWriter({
    newLine: "\n",
    indentNumberOfSpaces: 2,
    useTabs: false,
    useSingleQuote: true,
  });

  data.forEach((val) => {
    writer.write(`interface SomeInterface${val.name}`).block(() => {
      writer.writeLine(`discriminator: "${val.name}";`);
      writer.writeLine(`type: ${val.type};`);
    });
    writer.blankLine();
  });
  writer.writeLine(
    `export type SomeInterface = ${data
      .map((val) => `SomeInterface${val.name}`)
      .join(" | ")};`,
  );

  const result = writer.toString();

  const scriptFile = fileURLToPath(import.meta.url);
  const projectDir = path.join(scriptFile, "..", "..");
  const scriptFileRel = path.relative(projectDir, scriptFile);
  console.log(`/* autogenerated by ${scriptFileRel} */`);

  console.log(result);
}
